#version 430

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;

layout(binding = 0, r32f) uniform readonly image3D volume_tex;
layout(binding = 1, rgba32f) uniform writeonly image3D gradient_tex;

uniform uvec3 resolution; // the resolution of the volume texture

uniform vec3 cam_pos;

float distance_box_cam(int boxindex) {
vec3 boxcenter;
boxcenter[0]=(boxindex%height)step-boxlength;
boxcenter[1]=(boxindex-(boxindex%height%width))step-boxlength;
boxcenter[2]=(boxindex-(boxindex%height%length))step-boxlength;
float b_c_ditance;
b_c_ditance=sqrt(boxcenter[0]-cam[0])+sqrt(boxcenter[1]-cam[1])+sqrt(boxcenter[2]-cam[2]);
return b_c_distance
}


void main() {

    // The voxel coordinates of this thread
    ivec3 idx = ivec3(gl_GlobalInvocationID);
    
	if(idx.x < resolution.x && idx.y < resolution.y && idx.z < resolution.z) {
		

		
	}
}
